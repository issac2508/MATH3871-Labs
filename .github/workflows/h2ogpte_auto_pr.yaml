name: h2oGPTe Agent Automatic Review

on:
  pull_request:
    branches: [main]
    types: [opened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  h2ogpte-agent-assistant:
    name: h2oGPTe Auto Review Agent
    runs-on: ubuntu-latest

    steps:
      - name: h2oGPTe Auto Review Agent
        id: h2ogpte-agent-assistant
        uses: h2oai/h2ogpte-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          h2ogpte_api_key: ${{ secrets.H2OGPTE_API_KEY }}
          h2ogpte_api_base: https://h2ogpte.dev.h2o.ai # Change to your h2oGPTe API base URL
          github_api_url: https://api.github.com
          github_server_url: https://github.com
          # h2oGPTe Configuration (optional)
          llm: "auto" # choose from: https://docs.h2o.ai/enterprise-h2ogpte/guide/models-section
          agent_max_turns: "auto" # agent_max_turns must be one of: {"auto", 5, 10, 15, 20}
          agent_accuracy: "standard" # agent_accuracy must be one of: {"quick", "basic", "standard", "maximum"}
          agent_total_timeout: 3600 # agent_total_timeout must be a positive integer in seconds
          prompt: |
            You must only perform a code review in the user's repository, {{repoName}}, on pull request number {{idNumber}}.

            First, read the previous events to understand the context of the pull request provided below.
            Then, analyze the code changes in the pull request to understand their purpose and implementation details.

            Here are the previous events in chronological order:
            {{eventsText}}

            Your task is to:

            1. Review the code changes in the pull request
            2. Evaluate the clarity, correctness, performance, readability, and consistency of the code
            3. Identify any issues, such as:
              - Bugs or logical errors
              - Missing error handling or edge case coverage
              - Violations of code style or project conventions
              - Opportunities for simplification or improvement
            4. Do **not** make any code changes or new commits
            5. Provide a single, concise review comment summarizing your findings
              - Include specific suggestions or recommendations for improvement
              - Reference exact line numbers or code blocks where necessary
            6. If the code is well-written and no changes are needed, explain why the implementation is acceptable as-is

            Your review should help the contributor improve the pull request while maintaining a constructive and professional tone.